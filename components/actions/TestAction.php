<?php
/**
 * Created by PhpStorm.
 * User: aponirovskiy
 * Date: 18.02.2016
 * Time: 17:26
 */

namespace app\components\actions;


use app\components\behaviors\TestBehavior;
use app\components\events\TestEvent;
use yii\base\Action;
use yii\base\Widget;
use yii\filters\ContentNegotiator;
use yii\helpers\ArrayHelper;
use yii\helpers\Url;
use yii\web\Response;

class TestAction extends Action{

    const TEST_EVENT = 'testEvent';

    protected $start_time;

    protected $end_time;

    public function behaviors()
    {
        //return parent::behaviors(); // TODO: Change the autogenerated stub

        return ArrayHelper::merge([
            'content-neg' => [
                'class' => ContentNegotiator::className(),
                'formats' => [
                    'application/json' => Response::FORMAT_JSON,
                    'application/xml' => Response::FORMAT_XML,
                ],
                'languages' => [
                    'en-US',
                    'de',
                ],
            ],
            'event-listener' => [
                'class' => TestBehavior::className()
            ]
        ],
            parent::behaviors());
    }


    public function run()
    {
        //var_dump($this->getBehaviors());
        $e = new TestEvent();
        $e->setAdditional(array('my custom info!'));
        $this->trigger(self::TEST_EVENT, $e);
    }

    protected function dosmth(array $arr){
        p($arr);
    }

    protected function beforeRun()
    {
        $this->start_time = microtime(true);
        return true;
    }

    protected function afterRun()
    {
        $this->end_time = microtime(true);

        echo "\n\n\n".round(abs($this->end_time - $this->start_time), 8);
    }

}